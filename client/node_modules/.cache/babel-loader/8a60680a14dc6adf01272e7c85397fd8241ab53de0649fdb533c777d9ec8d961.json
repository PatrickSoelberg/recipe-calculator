{"ast":null,"code":"var _jsxFileName = \"/Users/patrickkristensen/Projects/recipe-calculator-frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Upload, Link, FileDown, Users } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FOOD_CATEGORIES = {\n  'Kød/Fisk': {\n    keywords: ['kød', 'bøf', 'bacon', 'laks', 'kotelet', 'reje', 'hummer', 'okse', 'kylling', 'filet', 'bisk']\n  },\n  'Mejeri': {\n    keywords: ['mælk', 'smør', 'æg', 'cremefraiche', 'fløde', 'yoghurt', 'ost', 'frossen spinat' // Special case\n    ]\n  },\n  'Kolonial': {\n    keywords: [\n    // Mel types\n    'mel', 'stivelse',\n    // Spices and dried herbs\n    'stødt', 'tørret', 'krydder',\n    // Nuts and seeds (except pine nuts)\n    'kerner', 'mandler', 'nødder',\n    // Processed items\n    'pure', 'hakket tomat', 'plader', 'bouillon',\n    // Liquids\n    'vin', 'olie'],\n    exactMatches: ['dijon sennep', 'honning', 'abrikos', 'fladbrød']\n  },\n  'Grønt': {\n    keywords: [\n    // Fresh vegetables\n    'kartoffel', 'løg', 'hvidløg', 'salat', 'tomat', 'selleri', 'champignon', 'squash', 'aubergine', 'gulerod',\n    // Fresh herbs (unless marked as dried)\n    'persille', 'basilikum', 'dild',\n    // Fresh fruits\n    'æble', 'citron', 'granatæble',\n    // Special cases\n    'pinjekerner'],\n    excludeIfPresent: ['tørret', 'stødt', 'hakket', 'pure']\n  }\n};\nfunction App() {\n  _s();\n  const [currentDay, setCurrentDay] = useState('Mandag');\n  const [loading, setLoading] = useState(false);\n  const [recipeUrl, setRecipeUrl] = useState('');\n  const [days, setDays] = useState({\n    Mandag: {\n      adults: 0,\n      kids: 0,\n      ingredients: [],\n      servings: 0\n    },\n    Tirsdag: {\n      adults: 0,\n      kids: 0,\n      ingredients: [],\n      servings: 0\n    },\n    Onsdag: {\n      adults: 0,\n      kids: 0,\n      ingredients: [],\n      servings: 0\n    },\n    Torsdag: {\n      adults: 0,\n      kids: 0,\n      ingredients: [],\n      servings: 0\n    },\n    Fredag: {\n      adults: 0,\n      kids: 0,\n      ingredients: [],\n      servings: 0\n    }\n  });\n  const calculateTotalPeople = (adults, kids) => {\n    return adults + kids / 2;\n  };\n  const scaleIngredient = (ingredient, adults, kids, servings) => {\n    const targetServings = adults + kids * 0.5;\n    const scalingFactor = targetServings / servings;\n    const originalAmount = parseFloat(ingredient.amount);\n    const scaledAmount = (originalAmount * scalingFactor).toFixed(1);\n    return {\n      ...ingredient,\n      originalAmount: `${ingredient.amount}${ingredient.unit}`,\n      scaledAmount: `${scaledAmount}${ingredient.unit}`\n    };\n  };\n  const categorizeIngredient = name => {\n    const normalizedName = name.toLowerCase().trim();\n\n    // Check exact matches first (for special cases)\n    for (const [category, data] of Object.entries(FOOD_CATEGORIES)) {\n      var _data$exactMatches;\n      if ((_data$exactMatches = data.exactMatches) !== null && _data$exactMatches !== void 0 && _data$exactMatches.includes(normalizedName)) {\n        return category;\n      }\n    }\n\n    // Check if it's explicitly marked as dried/processed\n    const isProcessed = FOOD_CATEGORIES['Grønt'].excludeIfPresent.some(word => normalizedName.includes(word));\n\n    // If it contains processed indicators, check Kolonial first\n    if (isProcessed) {\n      if (FOOD_CATEGORIES['Kolonial'].keywords.some(word => normalizedName.includes(word))) {\n        return 'Kolonial';\n      }\n    }\n\n    // Check each category's keywords\n    for (const [category, data] of Object.entries(FOOD_CATEGORIES)) {\n      if (data.keywords.some(word => normalizedName.includes(word))) {\n        return category;\n      }\n    }\n\n    // If no category found, return uncategorized\n    return 'Ukategoriseret';\n  };\n  const updateIngredientCategory = (ingredientName, newCategory) => {\n    setDays(prev => {\n      const newDays = {\n        ...prev\n      };\n      // Update the ingredient's category across all days\n      Object.keys(newDays).forEach(day => {\n        newDays[day].ingredients = newDays[day].ingredients.map(ing => {\n          if (ing.name === ingredientName) {\n            return {\n              ...ing,\n              category: newCategory\n            };\n          }\n          return ing;\n        });\n      });\n      return newDays;\n    });\n  };\n\n  // ... rest of your existing functions (handleFileChange, handleUrlSubmit, etc.) ...\n\n  const getCategoryOrder = () => ['Kød/Fisk', 'Mejeri', 'Grønt', 'Kolonial', 'Ukategoriseret'];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-50 py-8\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded-xl shadow-sm border border-gray-200 p-6 mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-6\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold text-gray-900\",\n          children: \"Samlet Indk\\xF8bsliste\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-8\",\n        children: getCategoryOrder().map(category => {\n          // Get ingredients for this category\n          const categoryIngredients = Object.values(days).flatMap(day => day.ingredients).filter((ingredient, index, self) => index === self.findIndex(i => i.name === ingredient.name) && categorizeIngredient(ingredient.name) === category);\n          if (categoryIngredients.length === 0) return null;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: `text-lg font-semibold ${category === 'Ukategoriseret' ? 'text-amber-600' : 'text-gray-900'}`,\n              children: category\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"w-full\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                className: \"bg-gray-50\",\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"px-4 py-3 text-left text-sm font-semibold text-gray-900\",\n                    children: [\"Ingrediens\", category === 'Ukategoriseret' && /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"block text-xs font-normal text-amber-600\",\n                      children: \"V\\xE6lg korrekt kategori\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 174,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 171,\n                    columnNumber: 23\n                  }, this), Object.keys(days).map(day => /*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"px-4 py-3 text-left text-sm font-semibold text-gray-900\",\n                    children: [day, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 181,\n                      columnNumber: 32\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"font-normal text-gray-500\",\n                      children: [calculateTotalPeople(days[day].adults, days[day].kids), \" personer\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 182,\n                      columnNumber: 27\n                    }, this)]\n                  }, day, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 180,\n                    columnNumber: 25\n                  }, this)), category === 'Ukategoriseret' && /*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"px-4 py-3 text-left text-sm font-semibold text-gray-900\",\n                    children: \"Kategori\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 188,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                className: \"divide-y divide-gray-200\",\n                children: categoryIngredients.map(ingredient => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"px-4 py-3 text-sm text-gray-900\",\n                    children: ingredient.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 197,\n                    columnNumber: 25\n                  }, this), Object.entries(days).map(([dayName, dayData]) => {\n                    const dayIngredient = dayData.ingredients.find(i => i.name === ingredient.name);\n                    if (!dayIngredient) {\n                      return /*#__PURE__*/_jsxDEV(\"td\", {\n                        className: \"px-4 py-3 text-sm text-gray-400\",\n                        children: \"-\"\n                      }, dayName, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 207,\n                        columnNumber: 31\n                      }, this);\n                    }\n                    const scaled = scaleIngredient(dayIngredient, dayData.adults, dayData.kids, dayData.servings);\n                    return /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"px-4 py-3\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"text-sm text-gray-900\",\n                        children: scaled.scaledAmount\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 222,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"text-xs text-gray-500\",\n                        children: [\"(original: \", scaled.originalAmount, \" til \", dayData.servings, \" personer)\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 225,\n                        columnNumber: 31\n                      }, this)]\n                    }, dayName, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 221,\n                      columnNumber: 29\n                    }, this);\n                  }), category === 'Ukategoriseret' && /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"px-4 py-3\",\n                    children: /*#__PURE__*/_jsxDEV(\"select\", {\n                      className: \"text-sm border rounded p-1\",\n                      onChange: e => updateIngredientCategory(ingredient.name, e.target.value),\n                      defaultValue: \"\",\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"\",\n                        disabled: true,\n                        children: \"V\\xE6lg kategori\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 238,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"K\\xF8d/Fisk\",\n                        children: \"K\\xF8d/Fisk\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 239,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Mejeri\",\n                        children: \"Mejeri\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 240,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Gr\\xF8nt\",\n                        children: \"Gr\\xF8nt\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 241,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Kolonial\",\n                        children: \"Kolonial\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 242,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 233,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 232,\n                    columnNumber: 27\n                  }, this)]\n                }, ingredient.name, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 17\n            }, this)]\n          }, category, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"WTero93tCmue9pWfN84cuihhzcI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Upload","Link","FileDown","Users","jsxDEV","_jsxDEV","FOOD_CATEGORIES","keywords","exactMatches","excludeIfPresent","App","_s","currentDay","setCurrentDay","loading","setLoading","recipeUrl","setRecipeUrl","days","setDays","Mandag","adults","kids","ingredients","servings","Tirsdag","Onsdag","Torsdag","Fredag","calculateTotalPeople","scaleIngredient","ingredient","targetServings","scalingFactor","originalAmount","parseFloat","amount","scaledAmount","toFixed","unit","categorizeIngredient","name","normalizedName","toLowerCase","trim","category","data","Object","entries","_data$exactMatches","includes","isProcessed","some","word","updateIngredientCategory","ingredientName","newCategory","prev","newDays","keys","forEach","day","map","ing","getCategoryOrder","className","children","fileName","_jsxFileName","lineNumber","columnNumber","categoryIngredients","values","flatMap","filter","index","self","findIndex","i","length","dayName","dayData","dayIngredient","find","scaled","onChange","e","target","value","defaultValue","disabled","_c","$RefreshReg$"],"sources":["/Users/patrickkristensen/Projects/recipe-calculator-frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Upload, Link, FileDown, Users } from 'lucide-react';\n\nconst FOOD_CATEGORIES = {\n  'Kød/Fisk': {\n    keywords: [\n      'kød', 'bøf', 'bacon', 'laks', 'kotelet', 'reje', 'hummer', 'okse',\n      'kylling', 'filet', 'bisk'\n    ],\n  },\n  'Mejeri': {\n    keywords: [\n      'mælk', 'smør', 'æg', 'cremefraiche', 'fløde', 'yoghurt', 'ost',\n      'frossen spinat' // Special case\n    ],\n  },\n  'Kolonial': {\n    keywords: [\n      // Mel types\n      'mel', 'stivelse',\n      // Spices and dried herbs\n      'stødt', 'tørret', 'krydder',\n      // Nuts and seeds (except pine nuts)\n      'kerner', 'mandler', 'nødder',\n      // Processed items\n      'pure', 'hakket tomat', 'plader', 'bouillon',\n      // Liquids\n      'vin', 'olie',\n    ],\n    exactMatches: [\n      'dijon sennep', 'honning', 'abrikos', 'fladbrød'\n    ]\n  },\n  'Grønt': {\n    keywords: [\n      // Fresh vegetables\n      'kartoffel', 'løg', 'hvidløg', 'salat', 'tomat', 'selleri',\n      'champignon', 'squash', 'aubergine', 'gulerod',\n      // Fresh herbs (unless marked as dried)\n      'persille', 'basilikum', 'dild',\n      // Fresh fruits\n      'æble', 'citron', 'granatæble',\n      // Special cases\n      'pinjekerner'\n    ],\n    excludeIfPresent: ['tørret', 'stødt', 'hakket', 'pure']\n  }\n};\n\nfunction App() {\n  const [currentDay, setCurrentDay] = useState('Mandag');\n  const [loading, setLoading] = useState(false);\n  const [recipeUrl, setRecipeUrl] = useState('');\n  const [days, setDays] = useState({\n    Mandag: { adults: 0, kids: 0, ingredients: [], servings: 0 },\n    Tirsdag: { adults: 0, kids: 0, ingredients: [], servings: 0 },\n    Onsdag: { adults: 0, kids: 0, ingredients: [], servings: 0 },\n    Torsdag: { adults: 0, kids: 0, ingredients: [], servings: 0 },\n    Fredag: { adults: 0, kids: 0, ingredients: [], servings: 0 }\n  });\n\n  const calculateTotalPeople = (adults, kids) => {\n    return adults + (kids / 2);\n  };\n  \n  const scaleIngredient = (ingredient, adults, kids, servings) => {\n    const targetServings = adults + (kids * 0.5);\n    const scalingFactor = targetServings / servings;\n    const originalAmount = parseFloat(ingredient.amount);\n    const scaledAmount = (originalAmount * scalingFactor).toFixed(1);\n    return {\n      ...ingredient,\n      originalAmount: `${ingredient.amount}${ingredient.unit}`,\n      scaledAmount: `${scaledAmount}${ingredient.unit}`\n    };\n  };\n  \n  const categorizeIngredient = (name) => {\n    const normalizedName = name.toLowerCase().trim();\n    \n    // Check exact matches first (for special cases)\n    for (const [category, data] of Object.entries(FOOD_CATEGORIES)) {\n      if (data.exactMatches?.includes(normalizedName)) {\n        return category;\n      }\n    }\n  \n    // Check if it's explicitly marked as dried/processed\n    const isProcessed = FOOD_CATEGORIES['Grønt'].excludeIfPresent.some(\n      word => normalizedName.includes(word)\n    );\n  \n    // If it contains processed indicators, check Kolonial first\n    if (isProcessed) {\n      if (FOOD_CATEGORIES['Kolonial'].keywords.some(\n        word => normalizedName.includes(word)\n      )) {\n        return 'Kolonial';\n      }\n    }\n  \n    // Check each category's keywords\n    for (const [category, data] of Object.entries(FOOD_CATEGORIES)) {\n      if (data.keywords.some(word => normalizedName.includes(word))) {\n        return category;\n      }\n    }\n  \n    // If no category found, return uncategorized\n    return 'Ukategoriseret';\n  };\n\n  const updateIngredientCategory = (ingredientName, newCategory) => {\n    setDays(prev => {\n      const newDays = { ...prev };\n      // Update the ingredient's category across all days\n      Object.keys(newDays).forEach(day => {\n        newDays[day].ingredients = newDays[day].ingredients.map(ing => {\n          if (ing.name === ingredientName) {\n            return { ...ing, category: newCategory };\n          }\n          return ing;\n        });\n      });\n      return newDays;\n    });\n  };\n\n  // ... rest of your existing functions (handleFileChange, handleUrlSubmit, etc.) ...\n\n  const getCategoryOrder = () => [\n    'Kød/Fisk',\n    'Mejeri',\n    'Grønt',\n    'Kolonial',\n    'Ukategoriseret'\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 py-8\">\n      {/* ... your existing JSX until the ingredients table ... */}\n\n      {/* Ingredients Table */}\n      <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6 mb-6\">\n        <div className=\"flex justify-between items-center mb-6\">\n          <h2 className=\"text-xl font-semibold text-gray-900\">Samlet Indkøbsliste</h2>\n        </div>\n        \n        <div className=\"space-y-8\">\n          {getCategoryOrder().map(category => {\n            // Get ingredients for this category\n            const categoryIngredients = Object.values(days)\n              .flatMap(day => day.ingredients)\n              .filter((ingredient, index, self) => \n                index === self.findIndex(i => i.name === ingredient.name) &&\n                categorizeIngredient(ingredient.name) === category\n              );\n\n            if (categoryIngredients.length === 0) return null;\n\n            return (\n              <div key={category} className=\"space-y-4\">\n                <h3 className={`text-lg font-semibold ${\n                  category === 'Ukategoriseret' ? 'text-amber-600' : 'text-gray-900'\n                }`}>\n                  {category}\n                </h3>\n                <table className=\"w-full\">\n                  <thead className=\"bg-gray-50\">\n                    <tr>\n                      <th className=\"px-4 py-3 text-left text-sm font-semibold text-gray-900\">\n                        Ingrediens\n                        {category === 'Ukategoriseret' && (\n                          <span className=\"block text-xs font-normal text-amber-600\">\n                            Vælg korrekt kategori\n                          </span>\n                        )}\n                      </th>\n                      {Object.keys(days).map(day => (\n                        <th key={day} className=\"px-4 py-3 text-left text-sm font-semibold text-gray-900\">\n                          {day}<br/>\n                          <span className=\"font-normal text-gray-500\">\n                            {calculateTotalPeople(days[day].adults, days[day].kids)} personer\n                          </span>\n                        </th>\n                      ))}\n                      {category === 'Ukategoriseret' && (\n                        <th className=\"px-4 py-3 text-left text-sm font-semibold text-gray-900\">\n                          Kategori\n                        </th>\n                      )}\n                    </tr>\n                  </thead>\n                  <tbody className=\"divide-y divide-gray-200\">\n                    {categoryIngredients.map((ingredient) => (\n                      <tr key={ingredient.name}>\n                        <td className=\"px-4 py-3 text-sm text-gray-900\">\n                          {ingredient.name}\n                        </td>\n                        {Object.entries(days).map(([dayName, dayData]) => {\n                          const dayIngredient = dayData.ingredients.find(\n                            i => i.name === ingredient.name\n                          );\n                          \n                          if (!dayIngredient) {\n                            return (\n                              <td key={dayName} className=\"px-4 py-3 text-sm text-gray-400\">\n                                -\n                              </td>\n                            );\n                          }\n\n                          const scaled = scaleIngredient(\n                            dayIngredient, \n                            dayData.adults, \n                            dayData.kids,\n                            dayData.servings\n                          );\n\n                          return (\n                            <td key={dayName} className=\"px-4 py-3\">\n                              <div className=\"text-sm text-gray-900\">\n                                {scaled.scaledAmount}\n                              </div>\n                              <div className=\"text-xs text-gray-500\">\n                                (original: {scaled.originalAmount} til {dayData.servings} personer)\n                              </div>\n                            </td>\n                          );\n                        })}\n                        {category === 'Ukategoriseret' && (\n                          <td className=\"px-4 py-3\">\n                            <select\n                              className=\"text-sm border rounded p-1\"\n                              onChange={(e) => updateIngredientCategory(ingredient.name, e.target.value)}\n                              defaultValue=\"\"\n                            >\n                              <option value=\"\" disabled>Vælg kategori</option>\n                              <option value=\"Kød/Fisk\">Kød/Fisk</option>\n                              <option value=\"Mejeri\">Mejeri</option>\n                              <option value=\"Grønt\">Grønt</option>\n                              <option value=\"Kolonial\">Kolonial</option>\n                            </select>\n                          </td>\n                        )}\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}